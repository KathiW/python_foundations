"""

# Project Euler #2

## Summary: 

[Project Euler](https://projecteuler.net/) is a great site for honing your programming skills while learning some math at the same time.

Here's [problem #2](https://projecteuler.net/problem=2):

  Each new term in the [Fibonacci sequence](https://en.wikipedia.org/wiki/Fibonacci_number) is generated by adding the previous two terms.  

  By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


## Product Requirements: 
* Complete the generator function 
* Complete the generator function 
* Use a filter to get even numbers
* Use reduce to get the sum


## Hints
* Read up on [itertools](https://docs.python.org/3/library/itertools.html)

"""
import itertools
import operator
import functools

limit = 4e6

def is_within_limit(n):
  return n<=limit

def is_even(n):
  return n%2==0

@functools.lru_cache(maxsize=None)
def fib(n):
    if n < 2:
        return n
    return fib(n-1) + fib(n-2)

fibs = (fib(n) for n in itertools.count())

even_fibs = filter(is_even,fibs)

even_fibs_below_limit = itertools.takewhile(is_within_limit, even_fibs)

def get_euler02_solution():
  return functools.reduce(operator.add, even_fibs_below_limit)

def main():
  print(f'Here is your answer: {get_euler02_solution()}')

if __name__ == "__main__":
    main()
